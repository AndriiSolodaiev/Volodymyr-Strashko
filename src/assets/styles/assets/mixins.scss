@mixin font-face($font-family, $url, $weight: normal, $style: normal, $asset-pipeline: false) {
  @font-face {
    font-family: '#{$font-family}';
    font-weight: #{$weight};
    font-style: '#{$style}';

    src: url('#{$url}.eot');
    src: url('#{$url}.eot?#iefix') format('embedded-opentype'),
    url('#{$url}.woff') format('woff'),
    url('#{$url}.ttf') format('truetype');
  }
}

// Function for converting a px based font-size to rem.
@function rem($size) {
  $remSize: $size / 14px;
  @return #{$remSize}rem;
}

@mixin toh($max_height) {
  @media screen and (max-height: $max_height) {
    @content;
  }
}

@function max($numbers...) {
  @return m#{a}x(#{$numbers});
}

@function min($numbers...) {
  @return m#{i}n(#{$numbers});
}

$full-width: 1200;
$work-width: 80;
$screen-height: 720;

@function vmax($pixels, $context: $full-width) {
  @return #{($pixels/$context) * 100}vmax;
}

@function vw($pixels, $context: $full-width) {
  @return #{($pixels/$context) * 100}vw;
}

@function lh($lh, $fz) {
  @return #{($lh/$fz)}em;
}

@mixin tablet() {
  @media screen and (min-width: 768px) {
    @content;
  }
}

@mixin laptop() {
  @media screen and (min-width: 1366px) {
    @content;
  }
}

@mixin desktop() {
  @media screen and (min-width: 1920px) {
    @content;
  }
}

@mixin adaptive-font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920));

  }

  @media screen and (min-width: 767px) {
    font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920));

  }
}

@mixin adaptive-padding($pcSize, $mobSize, $position) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    padding-#{$position}: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920));

  }

  @media screen and (min-width: 767px) {
    padding-#{$position}: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920));

  }
}

@mixin adaptive-radius($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    border-radius: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920));

  }

  @media screen and (min-width: 767px) {
    border-radius: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920));

  }
}

@mixin adaptive-max-width($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    max-width: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920));

  }

  @media screen and (min-width: 767px) {
    max-width: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920));

  }
}

@mixin adaptive-width($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    width: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920));

  }

  @media screen and (min-width: 767px) {
    width: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920));

  }
}

@mixin adaptive-height($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    height: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920));

  }

  @media screen and (min-width: 767px) {
    height: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920));

  }
}

@mixin adaptive-max-height($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    max-height: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920));

  }

  @media screen and (min-width: 767px) {
    max-height: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920));

  }
}

@mixin adaptive-width-i($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    width: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920)) !important;

  }

  @media screen and (min-width: 767px) {
    width: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920)) !important;

  }
}

@mixin adaptive-height-i($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    height: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920)) !important;

  }

  @media screen and (min-width: 767px) {
    height: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920)) !important;

  }
}

@mixin adaptive-margin($pcSize, $mobSize, $position) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media screen and (max-width: 767px) {
    margin-#{$position}: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px)/1920));

  }

  @media screen and (min-width: 767px) {
    margin-#{$position}: calc(#{$mobSize + px} + #{$addSize} * (100vw / 1920));

  }
}